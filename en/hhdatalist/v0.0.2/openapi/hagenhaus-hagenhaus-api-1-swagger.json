{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Hagenhaus API",
    "description" : "Hagenhaus API",
    "version" : "1"
  },
  "servers" : [ {
    "url" : "https://hagenhaus.com:3002/api"
  }, {
    "url" : "http://localhost:8081/api"
  } ],
  "paths" : {
    "/baseball/v1/players" : {
      "get" : {
        "tags" : [ "Players" ],
        "description" : "This operation returns an array of baseball player objects.",
        "operationId" : "getBaseballPlayers",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Fields"
        }, {
          "$ref" : "#/components/parameters/Filter"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/Limit"
        }, {
          "$ref" : "#/components/parameters/HasFieldList"
        }, {
          "$ref" : "#/components/parameters/HasJoinedFields"
        }, {
          "$ref" : "#/components/parameters/HasMetadata"
        }, {
          "$ref" : "#/components/parameters/HasRecords"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/baseball/v1/players/{id}" : {
      "get" : {
        "tags" : [ "Players" ],
        "description" : "This operation returns a baseball player object.",
        "operationId" : "getBaseballPlayer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/IdInPath"
        }, {
          "$ref" : "#/components/parameters/Fields"
        }, {
          "$ref" : "#/components/parameters/HasJoinedFields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/baseball/v1/player-stats" : {
      "get" : {
        "tags" : [ "Player Stats" ],
        "description" : "This operation returns an array of baseball player statistics objects.",
        "operationId" : "getBaseballPlayerStats",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Fields"
        }, {
          "$ref" : "#/components/parameters/Filter"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/Limit"
        }, {
          "$ref" : "#/components/parameters/HasFieldList"
        }, {
          "$ref" : "#/components/parameters/HasJoinedFields"
        }, {
          "$ref" : "#/components/parameters/HasMetadata"
        }, {
          "$ref" : "#/components/parameters/HasRecords"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/devportals/v1/companies" : {
      "get" : {
        "tags" : [ "Companies" ],
        "description" : "This operation returns an array of company objects.",
        "operationId" : "getCompanies",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Fields"
        }, {
          "$ref" : "#/components/parameters/Filter"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/Limit"
        }, {
          "$ref" : "#/components/parameters/HasMetadata"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCompaniesResponse200"
                },
                "example" : {
                  "counts" : {
                    "totalRecords" : 35,
                    "totalFilteredRecords" : 7,
                    "totalResponseRecords" : 3
                  },
                  "records" : [ {
                    "id" : "1eb0dc3e-e0ce-11ec-99fe-3382f1353464",
                    "name" : "Equinix, Inc.",
                    "url" : "https://www.equinix.com/",
                    "city" : "Redwood City",
                    "region" : "California",
                    "countryCode" : "USA"
                  }, {
                    "id" : "1eb1043e-e0ce-11ec-99fe-3382f1353464",
                    "name" : "FactSet Research Systems Inc.",
                    "url" : "https://www.factset.com/",
                    "city" : "Norwalk",
                    "region" : "Connecticut",
                    "countryCode" : "USA"
                  }, {
                    "id" : "1ec04bba-e0ce-11ec-99fe-3382f1353464",
                    "name" : "PTC Inc.",
                    "url" : "https://www.ptc.com/",
                    "city" : "Boston",
                    "region" : "Massachusetts",
                    "countryCode" : "USA"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/devportals/v1/companies/{id}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "description" : "This operation returns a company object.",
        "operationId" : "getCompany",
        "parameters" : [ {
          "$ref" : "#/components/parameters/UuidInPath"
        }, {
          "$ref" : "#/components/parameters/Fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                },
                "example" : {
                  "id" : "1eb0dc3e-e0ce-11ec-99fe-3382f1353464",
                  "name" : "Equinix, Inc.",
                  "url" : "https://www.equinix.com/",
                  "city" : "Redwood City",
                  "region" : "California",
                  "countryCode" : "USA"
                }
              }
            }
          }
        }
      }
    },
    "/devportals/v1/countries" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "This operation returns an array of [ISO-3 country-code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) objects.",
        "operationId" : "getCountries",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Fields"
        }, {
          "$ref" : "#/components/parameters/Filter"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/Limit"
        }, {
          "$ref" : "#/components/parameters/HasMetadata"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCountriesResponse200"
                },
                "example" : {
                  "counts" : {
                    "totalRecords" : 249,
                    "totalFilteredRecords" : 8,
                    "totalResponseRecords" : 3
                  },
                  "records" : [ {
                    "code" : "AFG",
                    "name" : "Afghanistan"
                  }, {
                    "code" : "KAZ",
                    "name" : "Kazakhstan"
                  }, {
                    "code" : "KGZ",
                    "name" : "Kyrgyzstan"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/devportals/v1/countries/{id}" : {
      "get" : {
        "tags" : [ "Countries" ],
        "description" : "This operation returns a [ISO-3 country-code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) object.",
        "operationId" : "getCountry",
        "parameters" : [ {
          "$ref" : "#/components/parameters/CountryCodeInPath"
        }, {
          "$ref" : "#/components/parameters/Fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Country"
                },
                "example" : {
                  "code" : "AFG",
                  "name" : "Afghanistan"
                }
              }
            }
          }
        }
      }
    },
    "/devportals/v1/portals" : {
      "post" : {
        "tags" : [ "Portals" ],
        "description" : "This operation creates a portal record.",
        "operationId" : "postPortal",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Fields"
        }, {
          "$ref" : "#/components/parameters/HasJoinedFields"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "url" : {
                    "type" : "string"
                  },
                  "companyId" : {
                    "$ref" : "#/components/schemas/Uuid"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      },
      "get" : {
        "tags" : [ "Portals" ],
        "description" : "This operation returns an array of developer portal objects.",
        "operationId" : "getPortals",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Fields"
        }, {
          "$ref" : "#/components/parameters/Filter"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/Limit"
        }, {
          "$ref" : "#/components/parameters/HasFieldList"
        }, {
          "$ref" : "#/components/parameters/HasJoinedFields"
        }, {
          "$ref" : "#/components/parameters/HasMetadata"
        }, {
          "$ref" : "#/components/parameters/HasRecords"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPortalsResponse200"
                },
                "example" : {
                  "counts" : {
                    "totalRecords" : 35,
                    "totalFilteredRecords" : 4,
                    "totalResponseRecords" : 3
                  },
                  "records" : [ {
                    "id" : "15ed665a-e19e-11ec-99fe-3382f1353464",
                    "name" : "Barclays",
                    "url" : "https://developer.barclays.com",
                    "companyId" : "1ea14724-e0ce-11ec-99fe-3382f1353464"
                  }, {
                    "id" : "15ed8b1c-e19e-11ec-99fe-3382f1353464",
                    "name" : "BNI API Digital Services",
                    "url" : "https://digitalservices.bni.co.id",
                    "companyId" : "1ea17c3a-e0ce-11ec-99fe-3382f1353464"
                  }, {
                    "id" : "15faf7de-e19e-11ec-99fe-3382f1353464",
                    "name" : "bol.com,",
                    "url" : "https://developers.bol.com",
                    "companyId" : "1ea1a82c-e0ce-11ec-99fe-3382f1353464"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/devportals/v1/portals/{id}" : {
      "get" : {
        "tags" : [ "Portals" ],
        "description" : "This operation returns a developer portal object.",
        "operationId" : "getPortal",
        "parameters" : [ {
          "$ref" : "#/components/parameters/UuidInPath"
        }, {
          "$ref" : "#/components/parameters/Fields"
        }, {
          "$ref" : "#/components/parameters/HasJoinedFields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Portal"
                },
                "example" : {
                  "id" : "15ec4054-e19e-11ec-99fe-3382f1353464",
                  "name" : "Ably Realtime",
                  "url" : "https://ably.com/docs",
                  "companyId" : "1e921d1c-e0ce-11ec-99fe-3382f1353464"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Portals" ],
        "description" : "This operation updates the specified portal.",
        "operationId" : "patchPortal",
        "parameters" : [ {
          "$ref" : "#/components/parameters/UuidInPath"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "updates" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Portals" ],
        "description" : "This operation deletes the specified portal.",
        "operationId" : "deletePortal",
        "parameters" : [ {
          "$ref" : "#/components/parameters/UuidInPath"
        } ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    },
    "/devportals/v1/sectors" : {
      "get" : {
        "tags" : [ "Sectors" ],
        "description" : "This operation returns an array of sector objects.",
        "operationId" : "getSectors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Fields"
        }, {
          "$ref" : "#/components/parameters/Filter"
        }, {
          "$ref" : "#/components/parameters/Order"
        }, {
          "$ref" : "#/components/parameters/Page"
        }, {
          "$ref" : "#/components/parameters/Limit"
        }, {
          "$ref" : "#/components/parameters/HasMetadata"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSectorsResponse200"
                }
              }
            }
          }
        }
      }
    },
    "/devportals/v1/sectors/{id}" : {
      "get" : {
        "tags" : [ "Sectors" ],
        "description" : "This operation returns a sector object.",
        "operationId" : "getSector",
        "parameters" : [ {
          "$ref" : "#/components/parameters/StringIdInPath"
        }, {
          "$ref" : "#/components/parameters/Fields"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sector"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Company" : {
        "title" : "Company",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "countryCode" : {
            "maxLength" : 3,
            "minLength" : 3,
            "pattern" : "^[A-Z]{3}$",
            "type" : "string"
          }
        }
      },
      "CompanyArray" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Company"
        }
      },
      "Counters" : {
        "title" : "Counters",
        "type" : "object",
        "properties" : {
          "numTotalRecords" : {
            "type" : "integer",
            "description" : "Total number of records in the database."
          },
          "numFilteredRecords" : {
            "type" : "integer",
            "description" : "Total number of records in the database that match the filter."
          },
          "numResponseRecords" : {
            "type" : "integer",
            "description" : "Total number of records in this particular response body."
          }
        }
      },
      "Country" : {
        "title" : "Country",
        "type" : "object",
        "properties" : {
          "countryCode" : {
            "$ref" : "#/components/schemas/CountryCode"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "CountryArray" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Country"
        }
      },
      "CountryCode" : {
        "maxLength" : 3,
        "minLength" : 3,
        "pattern" : "^[A-Z]{3}$",
        "type" : "string"
      },
      "GetCompaniesResponse200" : {
        "type" : "object",
        "properties" : {
          "counts" : {
            "$ref" : "#/components/schemas/Counters"
          },
          "records" : {
            "$ref" : "#/components/schemas/CompanyArray"
          }
        }
      },
      "GetCountriesResponse200" : {
        "type" : "object",
        "properties" : {
          "counts" : {
            "$ref" : "#/components/schemas/Counters"
          },
          "records" : {
            "$ref" : "#/components/schemas/CountryArray"
          }
        }
      },
      "GetPortalsResponse200" : {
        "type" : "object",
        "properties" : {
          "counts" : {
            "$ref" : "#/components/schemas/Counters"
          },
          "records" : {
            "$ref" : "#/components/schemas/PortalArray"
          }
        }
      },
      "GetSectorsResponse200" : {
        "type" : "object",
        "properties" : {
          "counts" : {
            "$ref" : "#/components/schemas/Counters"
          },
          "records" : {
            "$ref" : "#/components/schemas/SectorArray"
          }
        }
      },
      "Id" : {
        "type" : "string",
        "description" : "Record ID."
      },
      "Portal" : {
        "title" : "Portal",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string"
          }
        }
      },
      "PortalArray" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Portal"
        }
      },
      "Sector" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Sector identifier."
          },
          "name" : {
            "type" : "string",
            "description" : "Sector name."
          }
        }
      },
      "SectorArray" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Sector"
        }
      },
      "StringId" : {
        "type" : "string",
        "description" : "Identifier of type string."
      },
      "Uuid" : {
        "maxLength" : 36,
        "minLength" : 36,
        "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "type" : "string",
        "description" : "Universally Unique ID."
      }
    },
    "parameters" : {
      "CountryCodeInPath" : {
        "name" : "id",
        "in" : "path",
        "description" : "[ISO-3 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "$ref" : "#/components/schemas/CountryCode"
        }
      },
      "Fields" : {
        "name" : "fields",
        "in" : "query",
        "description" : "Specifies the fields to return in each record. Default is all fields.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        },
        "examples" : {
          "All fields" : {
            "value" : ""
          },
          "field1" : {
            "value" : "field1"
          },
          "field1, field2, and field3" : {
            "value" : "field1, field2, field3"
          }
        }
      },
      "Filter" : {
        "name" : "filter",
        "in" : "query",
        "description" : "Specifies the types of records that are returnable. Default is all records.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        },
        "examples" : {
          "All records" : {
            "value" : ""
          },
          "Records where field1 is 25" : {
            "value" : "field1 = 25"
          },
          "Records where field2 is \"abc\"" : {
            "value" : "field2 like \"abc\""
          },
          "Records where field2 starts with \"abc\"" : {
            "value" : "field2 like \"abc%\""
          },
          "Records where field2 includes \"xyz\"" : {
            "value" : "field2 like \"%xyz%\""
          },
          "Records where field2 includes \"abc\" and field3 is \"xyz\"" : {
            "value" : "field2 like \"%abc%\" and field3 like \"xyz\""
          }
        }
      },
      "HasFieldList" : {
        "name" : "hasFieldList",
        "in" : "query",
        "description" : "True means return list of all record fields. Default is false.",
        "schema" : {
          "type" : "boolean"
        }
      },
      "HasMetadata" : {
        "name" : "hasMetadata",
        "in" : "query",
        "description" : "True means return metadata. Default is true.",
        "schema" : {
          "type" : "boolean"
        }
      },
      "HasRecords" : {
        "name" : "hasRecords",
        "in" : "query",
        "description" : "True means return records. Default is true.",
        "schema" : {
          "type" : "boolean"
        }
      },
      "HasJoinedFields" : {
        "name" : "hasJoinedFields",
        "in" : "query",
        "description" : "True means include joined fields in response. Default is false.",
        "schema" : {
          "type" : "boolean"
        }
      },
      "Order" : {
        "name" : "order",
        "in" : "query",
        "description" : "Establishing the order of returnable records. Default is random.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        },
        "examples" : {
          "Default order" : {
            "value" : ""
          },
          "Order by field asc" : {
            "value" : "field asc"
          },
          "Order by field1 asc, then field2 desc" : {
            "value" : "field1 asc, field2 desc"
          }
        }
      },
      "IdInPath" : {
        "name" : "id",
        "in" : "path",
        "description" : "Record Id.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "$ref" : "#/components/schemas/Id"
        }
      },
      "Page" : {
        "name" : "page",
        "in" : "query",
        "description" : "Specifies page number. 1 means first page. Default is 1.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer"
        }
      },
      "Limit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Specifies page size. Default is 10.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer"
        }
      },
      "StringIdInPath" : {
        "name" : "id",
        "in" : "path",
        "description" : "Record identifier",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "$ref" : "#/components/schemas/StringId"
        }
      },
      "UuidInPath" : {
        "name" : "id",
        "in" : "path",
        "description" : "Universally Unique ID (e.g. 12345678-abcd-abcd-abcd-12345678abcd).",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "$ref" : "#/components/schemas/Uuid"
        }
      },
      "Updates" : {
        "name" : "updates",
        "in" : "query",
        "description" : "Specifies one or more fields to update along with the new value for each.",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        },
        "examples" : {
          "field1" : {
            "value" : "field1=\"New Value\""
          },
          "field1 and field2" : {
            "value" : "field1=\"New Value\",field2=\"New Value\""
          }
        }
      }
    }
  }
}